{"mappings":"kBACMA,EAAMC,SAASC,cAAc,QAC7BC,EAAOF,SAASC,cAAc,QAC9BE,EAAUH,SAASC,cAAc,cACjCG,EAAWJ,SAASC,cAAc,eAElCI,EAAOL,SAASM,iBAAiB,cAWvC,SAAAC,IACEF,EAAKG,SAASC,IACyB,MAAjCA,EAAIC,aAAa,YACnBD,EAAIE,aAAa,WAAY,MAE7BF,EAAIE,aAAa,WAAY,MAqBnC,SAAAC,IACEb,EAAIc,UAAUC,OAAO,aACrBZ,EAAKW,UAAUC,OAAO,aAGtBf,EAAIY,aAAa,cAAe,QAChCR,EAAQY,gBAAgB,iBAIxBR,IAGAJ,EAAQa,QAKVb,EAAQc,iBAAiB,SAAS,KAjDzBlB,EAAIc,UAAUK,SAAS,aAmD5BN,KAnCFb,EAAIc,UAAUM,IAAI,aAClBjB,EAAKW,UAAUM,IAAI,aAGnBpB,EAAIgB,gBAAgB,eACpBZ,EAAQQ,aAAa,gBAAiB,QAItCJ,IAGAH,EAASY,YA6BXZ,EAASa,iBAAiB,SAAS,KACjCL,OAGFV,EAAKe,iBAAiB,SAAUG,IAI1BA,EAAEC,OAAOR,UAAUK,SAAS,cAC9BN","sources":["./src/index.js"],"sourcesContent":["// Element selectors\r\nconst nav = document.querySelector('.nav');\r\nconst body = document.querySelector('body');\r\nconst navOpen = document.querySelector('.nav__open');\r\nconst navClose = document.querySelector('.nav__close');\r\n\r\nconst tabs = document.querySelectorAll('[tabindex]');\r\n\r\n// Nav Functions\r\n\r\n// Helper function: returns true/false whether the nav is currently opened or closed\r\nfunction isNavOpen() {\r\n  return nav.classList.contains('nav--open');\r\n}\r\n\r\n// toggles all elements with an attribute of tabindex\r\n// if tabindex=\"0\", sets to tabindex=\"-1\", and vice-versa\r\nfunction toggleTabs() {\r\n  tabs.forEach((tab) => {\r\n    if (tab.getAttribute('tabindex') === '0') {\r\n      tab.setAttribute('tabindex', '-1');\r\n    } else {\r\n      tab.setAttribute('tabindex', 0);\r\n    }\r\n  });\r\n}\r\n\r\nfunction openNav() {\r\n  nav.classList.add('nav--open');\r\n  body.classList.add('no-scroll');\r\n\r\n  // aria attributes\r\n  nav.removeAttribute('aria-hidden');\r\n  navOpen.setAttribute('aria-expanded', 'true');\r\n\r\n  // tabindex\r\n  // when the nav menu is opened, users should be able to tab to the links inside\r\n  toggleTabs();\r\n\r\n  // focusing nav close button, to take focus off the navOpen if user tabbed to it\r\n  navClose.focus();\r\n}\r\n\r\nfunction closeNav() {\r\n  nav.classList.remove('nav--open');\r\n  body.classList.remove('no-scroll');\r\n\r\n  // aria attributes\r\n  nav.setAttribute('aria-hidden', 'true');\r\n  navOpen.removeAttribute('aria-expanded');\r\n\r\n  // tabindex\r\n  // when the nav menu is closed, users should not be able to tab to the links inside\r\n  toggleTabs();\r\n\r\n  // focusing nav open button, to take focus off the navClose if user tabbed to it\r\n  navOpen.focus();\r\n}\r\n\r\n// Event Listeners\r\n\r\nnavOpen.addEventListener('click', () => {\r\n  if (isNavOpen()) {\r\n    closeNav();\r\n  } else {\r\n    openNav();\r\n  }\r\n});\r\n\r\nnavClose.addEventListener('click', () => {\r\n  closeNav();\r\n});\r\n\r\nbody.addEventListener('click', (e) => {\r\n  // Close nav when the greyed-out part of the body is pressed\r\n  // Must select e.target instead of body, to prevent the event from\r\n  // firing every time the button is pressed\r\n  if (e.target.classList.contains('no-scroll')) {\r\n    closeNav();\r\n  }\r\n});\r\n"],"names":["$d3dfc027196df876626c47bef188877c$var$nav","document","querySelector","$d3dfc027196df876626c47bef188877c$var$body","$d3dfc027196df876626c47bef188877c$var$navOpen","$d3dfc027196df876626c47bef188877c$var$navClose","$d3dfc027196df876626c47bef188877c$var$tabs","querySelectorAll","$d3dfc027196df876626c47bef188877c$var$toggleTabs","forEach","tab","getAttribute","setAttribute","$d3dfc027196df876626c47bef188877c$var$closeNav","classList","remove","removeAttribute","focus","addEventListener","contains","add","e","target"],"version":3,"file":"index.2c6e110d.js.map"}